# Set a fixed compose project name to avoid having docker compose make a possibly wrong one from the project checkout path.
COMPOSE_PROJECT_NAME={{ cookiecutter.compose_project_name }}

# Different run configurations available:
COMPOSE_FILE=docker-compose.yml
#COMPOSE_FILE=docker-compose.yml:docker-compose.werkzeug.yml
#COMPOSE_FILE=docker-compose.yml:docker-compose.nginx.yml

SERVER_PROTOCOL=http
SERVER_NAME=localhost
DJANGO_ALLOWED_HOSTS=localhost

# Make warning bubble up as errors.
PYTHONWARNINGS=error::RuntimeWarning
# Reduce the number of "arenas" to something saner. By default it's the number
# of cores - if you have a high core count a lot of memory will be wasted.
MALLOC_ARENA_MAX=2
# Set a memory limit, as a development safeguard.
MEMORY_LIMIT=4G

RELOADER_MONITOR=inotify
RELOADER_CONTAINERS=web|worker

SENTRY_DSN=

LOGGING_LEVEL=DEBUG
#LOGGING_PATH=/var/app/logs

DJANGO_DB_NAME=app
DJANGO_DB_USER=app
DJANGO_DB_PASSWORD=app
DJANGO_DB_HOST=pg
DJANGO_DB_PORT=5432

POSTGRES_DB=app
POSTGRES_PASSWORD=app
POSTGRES_USER=app
PGDATA=/root/pg

DJANGO_DEBUG=false
DJANGO_DEBUG_SQL=false
DJANGO_DEBUG_TOOLBAR=false
DJANGO_SECRET_KEY={{ random_ascii_string(128) }}
DJANGO_SETTINGS_MODULE={{ cookiecutter.django_project_name }}.settings
DJANGO_PROJECT_NAME={{ cookiecutter.django_project_name }}

DJANGO_EMAIL_BACKEND=django.core.mail.backends.filebased.EmailBackend
DJANGO_EMAIL_FILE_PATH=/var/app/emails
DEFAULT_FROM_EMAIL={{ cookiecutter.deploy_email }}

DJANGO_CACHE_BACKEND=django_pylibmc.memcached.PyLibMCCache
DJANGO_CACHE_LOCATION=mc
{%- if cookiecutter.worker == 'rq' %}

REDIS_HOST=redis
{%- endif %}
